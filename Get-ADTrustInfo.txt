Function Get-ADTrustInfo {
    <#
    .SYNOPSIS
        Query AD for all trusts in the specified domain and check their state.
    .DESCRIPTION
        This cmdlet querys AD and returns a custom object with information such as trust name, the creation date, the last modification date, the direction, the type, the SID of the trusted domain, the trusts attributes, and the trust state,
    .PARAMETER DomainName
        Domain Name to query
        Default: Current user domain
    .EXAMPLE
        Get-ADTrustsInfo -DomainName contoso.com
    .LINK
        http://IfForDummies.net
    #>
    [cmdletbinding()]
    param(
        [Parameter(Mandatory=$false,
            HelpMessage=='Provide a domain name !')]
        [ValidateScript({Test-Connection $_ -Count 1 -Quiet})]
        [String]$DomainName=$env:USERDNSDOMAIN
    )
    Begin{
    }
    Process{
        $searcher=[ADSIsearcher]"(objectclass=trustedDomain)"
        $searcher.serachroot.Path="LDAP://$DomainName"
        $searcher.PropertiesToLoad.AddRange(('whenChanged','whenCreated','trustPartner','trustAttributes','trustDirection','trustType','securityIdentifier')) | Out-Null
        Write-Verbose "Searching in AD for Trusts..."
        try {
            $trusts=$searcher.FindAll()
            $trusts | % {
                switch ($_.Properties.trustdirection)
                {
                    1 {$TrustDirection="Inbound"}
                    2 {$TrustDirection="Outbound"}
                    3 {$TrustDirection="Bidirection"}
                    default {$TrustDirection="N/A"}
                }

                switch ($_.Properties.trusttype)
                {
                    1 {$TrustType="Windows NT"} #Downlevel (2000 and lower)
                    2 {$TrustType="Active Directory"} #UpLevel (2003 and higher)
                    3 {$TrustType="Kerberos realm"} #Not AD Based
                    4 {$TrustType="DCE"}
                    default {$TrustType="N/A"}
                }
                #Convertion of System.Byte[] in readable SID
                Write-Verbose "Converting the SID..."
                $SID=(New-Object -TypeName System.Security.Principal,SecurityIdentifier -ArgumentList $_.properties.securityidentifier[0], 0).value
                Write-Verbose "Querying WMI..."
                $wmitrust=Get-WmiObject -Namespace "root/MicrosoftActiveDirectory" -Class Microsoft_DomainTrustStatus -ComputerName $DomainName -Filter "SID='$SID'"

                [String[]]$TrustAttributes=$null
                if([int32]$_.properties.trustattributes[0] -band 0x00000001){$TrustAttributes+="Non Transitive"}
                if([int32]$_.properties.trustattributes[0] -band 0x00000002){$TrustAttributes+="UpLevel"}
                if([int32]$_.properties.trustattributes[0] -band 0x00000004){$TrustAttributes+="Quarantaine"} #SID Filtering
                if([int32]$_.properties.trustattributes[0] -band 0x00000008){$TrustAttributes+="Forest Transitive"}
                if([int32]$_.properties.trustattributes[0] -band 0x00000010){$TrustAttributes+="Cross Organization"} #Selective Auth
                if([int32]$_.properties.trustattributes[0] -band 0x00000020){$TrustAttributes+="Within Forest"}
                if([int32]$_.properties.trustattributes[0] -band 0x00000040){$TrustAttributes+="Treat as External"}
                if([int32]$_.properties.trustattributes[0] -band 0x00000080){$TrustAttributes+="Uses RC4 Encryption"}
                #https://msdn.microsoft.com/en-us/library/cc223779.aspx
                Write-Verbose "Constructing object..."
                $Object = New-Object PSObject -Property @{
                    'Trust Name'   = $($_.Properties.trustpartner)
                    'Created On'   = $($_.Properties.whencreated)
                    'Last Changed' = $($_.Properties.whenchanged)
                    'Direction'    = $TrustDirection
                    'Type'         = $TrustType
                    'Domain SID'   = $SID
                    'Status'       = $wmitrust.TrustStatusString
                    'Attributes'   = $TrustAttributes -join ','
                }#End Object
                Write-Output $Object
            }#End Trusts %
        }catch {Write-Warning "$_" }
    }#End Process
    End{
    }
}